How to recreate the GPi outlier detection results.txt
updated 5/5/24
------------------------------------------------------
-> Note: This code was written in Matlab R2022a, and 
makes use of optional toolboxes provided by Mathworks.  
It is not guaranteed to work with earlier Matlab versions. 

(1) The necessary data files are available in a 
Zenodo repository: 

-> Data to accompany the outlier-waveform-detection 
Github repository
-> DOI: 10.5281/zenodo.11077189

To recreate the results, it is sufficient to download two 
of the files in that Zenodo repository: 

-> snip_output.tar.7z
-> GPi_datalists.tar.7z
 
The remaining files on Zenodo are not necessary to recreate the outlier results, but can be useful to demonstrate how the spike waveforms were extracted and aligned (see "How to recreate spike waveform alignment.")

(2) The downloaded files can be decompressed and extracted
from the tar.7z archive using 7-zip: https://www.7-zip.org/

(3) Step (2) should return "snip_output" and "GPi_datalists" folders. Place these folders in the outlier-waveform-detection directory where this text file is located.

(4) The "compute_features_loop.m" script should be run for all 
combinations of subject ("G" or "I") and mptp state ("Pre" and "Post"). 

-> Subject/MPTP state can be changed by setting the "subj" and "mptp" variables towards the top of the script.
-> Set writeData to true to ensure that the necessary data are saved.
-> This script will quantify several features based on the median of each unit's waveforms.
-> Only three of these features will be used in outlier detection. The other features may be useful for other purposes.
-> The saved data will be placed in a "feat_output" folder.
	
(5) The final script, "get_dbscan_labels.m", should be run for the Pre and Post states separately (this step collapses over subjects). 
-> This script runs the DBSCAN clustering algorithm using 3 of the 
features quantified in step (4).  
-> Set writeData to true to write out the computed info into a .mat file.
-> Set writetbl to true to write out an Excel sheet that lists the counts 
of units assigned to the "core", "border", and "outlier" categories 
(stored in the "tbl" variable).
-> The "ix_out" variable can be used in tandem with the "nameSetsAll" variable 
to identify those rows in the datalists that correspond to the outliers, 
and with the "snctSetsAll" variable to visualize the waveforms of the outliers. 
-> The variables "nameSetsAll" and "snctSetsAll" take the form of cell arrays. 
If cells contain > 1 entry, this implies that the unit was isolated
across two or more sessions, and the means of the feature values from those
sessions were submitted to the DBSCAN step.

